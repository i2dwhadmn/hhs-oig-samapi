AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  SearchFunctionIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SearchFunctionIamRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      PermissionsBoundary: arn:aws:iam::533793656583:policy/scopePermissions
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
  SearchFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: document_search/
      Handler: app.lambda_handler
      Runtime: python3.7
      Role: !GetAtt SearchFunctionIamRole.Arn
      Architectures:
        - x86_64
      Events:
        Search:
          Type: Api 
          Properties:
            Path: /search
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SearchApi:
    Description: "API Gateway endpoint URL for Prod stage for Search function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/search/"
  SearchFunction:
    Description: "Search Lambda Function ARN"
    Value: !GetAtt SearchFunction.Arn
  SearchFunctionIamRole:
    Description: "Implicit IAM Role created for Search function"
    Value: !GetAtt SearchFunctionIamRole.Arn
